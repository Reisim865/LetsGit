Cheatsheet Datei zu Woche 2 HPI git2020

git branch <name>
erstellt quasi einen neuen Fork/Pfad mit Bezug auf den aktuellen Stand/Commit
Der Zeiger/Head bleibt jedoch auf dem master(branch)

git checkout <branch>
wechselt den Zeiger/Head auf den angewählten branch

git checkout -b <name>
erstellt einen neuen branch und wechselt gleichzeitig den Zeiger auf den neu erstellten branch

git merge <branch>
führt branches zusammen (darauf achten wo in diesem Moment der Zeiger/Head liegt)

git log
zeigt die commit Historie an, q beendet log anzeige

zusätzliche Optionen für git log
git log -p oder git log --patch
zeigt Unterschied(die patch-Ausgabe) an, der bei commit eingefügt wurde, q beendet log anzeige

git log -<zahl> (Bsp. - git log -2)
nur die letzten Einträge, entsprechend <zahl>, werden angezeigt, im Beispiel die letzten 2 Einträge, q beendet log anzeige

git log --stat
zeigt eine kurze Statistik zu den commits an, q beendet log anzeige

git log --pretty
die commits werden anders formatiert angezeigt (Infos sind einfacher zu erkennen/lokalisieren), q beendet log anzeige

git log --graph
zeigt den Verlauf des Repositorys/der commits in grafischer Form an, Verzweigungen der branches werden visualisiert,
q beendet log anzeige

git log --graph --decorate --oneline
zeigt den Verlauf des Repositorys/der commits in grafischer und übersichtlicher Form an, log wird automatisch beendet

git reset HEAD <datei>
unstaging der angegebenen Datei wird durchgeführt

git checkout -- <datei>
Änderungen an einer Datei werden verworfen

git commit --amend
letzter commit wird verändert

git reset <commit>
Rückkehr zum angegebenen commit

